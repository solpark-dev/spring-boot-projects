<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="CartMapper">
 	
	<!-- ========================================
	     ResultMap: Cart 객체 매핑 (상품 정보 + 파일 포함)
	     ======================================== -->
	<resultMap id="cartSelectMap" type="cart">
		<!-- new_cart 테이블 필드 -->
		<result property="cartId" 		column="cart_id" 		jdbcType="INTEGER"/>
		<result property="userNo" 		column="user_no" 		jdbcType="INTEGER"/>
		<result property="prodNo" 		column="prod_no" 		jdbcType="INTEGER"/>
		<result property="quantity" 	column="quantity" 		jdbcType="INTEGER"/>
		<result property="regDate" 		column="reg_date" 		jdbcType="DATE"/>
		
		<!-- 상품 정보 (JOIN으로 가져옴) -->
		<association property="product" javaType="product">
			<id property="prodNo" 			column="prod_no" 			jdbcType="INTEGER"/>
			<result property="prodName" 	column="prod_name" 			jdbcType="VARCHAR"/>
			<result property="prodDetail" 	column="prod_detail" 		jdbcType="VARCHAR"/>
			<result property="price" 		column="price" 				jdbcType="INTEGER"/>
			<result property="manuDate" 	column="manufacture_day" 	jdbcType="VARCHAR"/>
			<result property="regDate" 		column="prod_reg_date" 		jdbcType="DATE"/>
			<result property="saleStatus" 	column="sale_status" 		jdbcType="VARCHAR"/>
			
			<!-- ✅ productFiles collection 추가 -->
			<collection property="productFiles" ofType="productFile">
				<id property="fileId" 			column="file_id" 		jdbcType="INTEGER"/>
				<result property="prodNo" 		column="prod_no" 		jdbcType="INTEGER"/>
				<result property="originalName" column="original_name" 	jdbcType="VARCHAR"/>
				<result property="savedName" 	column="saved_name" 	jdbcType="VARCHAR"/>
				<result property="fileSize" 	column="file_size" 		jdbcType="INTEGER"/>
				<result property="fileType" 	column="file_type" 		jdbcType="VARCHAR"/>
				<result property="uploadDate" 	column="upload_date" 	jdbcType="DATE"/>
			</collection>
		</association>
	</resultMap>
	
	
	<!-- ========================================
	     SELECT: 사용자별 장바구니 목록 조회
	     ✅ product_files 테이블 LEFT JOIN 추가
	     ======================================== -->
	<select id="getCartListByUserNo" parameterType="int" resultMap="cartSelectMap">
		SELECT
		    c.cart_id,
		    c.user_no,
		    c.prod_no,
		    c.quantity,
		    c.reg_date,
		    
		    p.prod_name,
		    p.prod_detail,
		    p.price,
		    p.manufacture_day,
		    p.reg_date as prod_reg_date,
		    
		    -- ✅ 파일 정보 추가
		    pf.file_id,
		    pf.original_name,
		    pf.saved_name,
		    pf.file_size,
		    pf.file_type,
		    pf.upload_date,
		    
		    -- 판매 상태 조회 (구매 이력으로 판단)
		    CASE 
		        WHEN EXISTS (
		            SELECT 1 
		            FROM new_orders o 
		            JOIN new_order_details od ON o.order_no = od.order_no
		            WHERE od.prod_no = p.prod_no 
		            AND o.order_status_code IN ('PAYMENT_COMPLETE', 'PREPARING_SHIPMENT', 'SHIPPED', 'DELIVERED')
		        ) 
		        THEN 'SOLD'
		        ELSE 'AVAILABLE'
		    END as sale_status
		    
		FROM new_cart c
		JOIN new_product p ON c.prod_no = p.prod_no
		LEFT JOIN product_files pf ON p.prod_no = pf.prod_no
		WHERE c.user_no = #{userNo}
		ORDER BY c.reg_date DESC, pf.file_id ASC
	</select>
	
	
	<!-- ========================================
	     SELECT: 특정 장바구니 항목 조회
	     ✅ product_files 테이블 LEFT JOIN 추가
	     ======================================== -->
	<select id="getCartItem" parameterType="int" resultMap="cartSelectMap">
		SELECT
		    c.cart_id,
		    c.user_no,
		    c.prod_no,
		    c.quantity,
		    c.reg_date,
		    
		    p.prod_name,
		    p.prod_detail,
		    p.price,
		    p.manufacture_day,
		    p.reg_date as prod_reg_date,
		    
		    -- ✅ 파일 정보 추가
		    pf.file_id,
		    pf.original_name,
		    pf.saved_name,
		    pf.file_size,
		    pf.file_type,
		    pf.upload_date
		    
		FROM new_cart c
		JOIN new_product p ON c.prod_no = p.prod_no
		LEFT JOIN product_files pf ON p.prod_no = pf.prod_no
		WHERE c.cart_id = #{cartId}
		ORDER BY pf.file_id ASC
	</select>
	
	
	<!-- 나머지 쿼리는 동일 -->
	<select id="getCartByUserAndProduct" parameterType="map" resultMap="cartSelectMap">
		SELECT
		    c.cart_id,
		    c.user_no,
		    c.prod_no,
		    c.quantity,
		    c.reg_date
		FROM new_cart c
		WHERE c.user_no = #{userNo}
		  AND c.prod_no = #{prodNo}
	</select>
	
	<insert id="addCart" parameterType="cart">
		<selectKey keyProperty="cartId" resultType="int" order="BEFORE">
			SELECT seq_cart_id.nextval FROM dual
		</selectKey>
		
		INSERT INTO new_cart (
			cart_id,
			user_no,
			prod_no,
			quantity,
			reg_date
		) VALUES (
			#{cartId},
			#{userNo},
			#{prodNo},
			#{quantity},
			SYSDATE
		)
	</insert>
	
	<update id="updateCartQuantity" parameterType="cart">
		UPDATE new_cart
		SET quantity = #{quantity}
		WHERE cart_id = #{cartId}
	</update>
	
	<delete id="deleteCart" parameterType="int">
		DELETE FROM new_cart
		WHERE cart_id = #{cartId}
	</delete>
	
	<delete id="deleteCartItems" parameterType="list">
		DELETE FROM new_cart
		WHERE cart_id IN
		<foreach collection="list" item="cartId" open="(" separator="," close=")">
			#{cartId}
		</foreach>
	</delete>
	
	<delete id="clearCartByUserNo" parameterType="int">
		DELETE FROM new_cart
		WHERE user_no = #{userNo}
	</delete>
	
	<select id="getCartCount" parameterType="int" resultType="int">
		SELECT COUNT(*)
		FROM new_cart
		WHERE user_no = #{userNo}
	</select>

</mapper>